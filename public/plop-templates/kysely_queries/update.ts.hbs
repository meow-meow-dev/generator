import type {
  {{ name }},
  DB,
} from "@rezume/public/server/types/database";
import type { Updateable } from "kysely";

import { updateQuery } from "@meow-meow-dev/server-utilities/queries";

type Updateable{{ name }} = Required<Updateable<{{ name }}>>;

type Update{{ name }}Props = {
  {{ camelCase name }}: Updateable{{ name }};
};

export const update{{ name }} = updateQuery<
  DB,
  Update{{ name }}Props,
  Updateable{{ name }}
>(({ db, {{ camelCase name }}: { id, ...{{ camelCase name }} } }) =>
  db
    .updateTable("{{ camelCase name }}")
    .set({{ camelCase name }})
    .where("id", "=", id)
    .returning([/* TODO list fields */])
    .executeTakeFirst()
    .then((row) => (row ? { ...row, id } : undefined)),
);
